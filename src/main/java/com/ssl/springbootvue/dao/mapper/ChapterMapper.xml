<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssl.springbootvue.dao.ChapterMapper">
  <resultMap id="BaseResultMap" type="com.ssl.springbootvue.model.pojo.Chapter">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="book_id" jdbcType="VARCHAR" property="bookId" />
    <result column="chapter_sort_id" jdbcType="INTEGER" property="chapterSortId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="content_url" jdbcType="VARCHAR" property="contentUrl" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="previous_chapter" jdbcType="VARCHAR" property="previousChapter" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="look_times" jdbcType="INTEGER" property="lookTimes" />
    <result column="report" jdbcType="INTEGER" property="report" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_id, chapter_sort_id, `name`, description, content_url, author_id, previous_chapter, 
    `status`, look_times, report, create_time, create_user_id, update_time, update_user_id
  </sql>
  <select id="selectByExample" parameterType="com.ssl.springbootvue.model.pojo.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chapter
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chapter
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssl.springbootvue.model.pojo.ChapterExample">
    delete from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssl.springbootvue.model.pojo.Chapter">
    insert into chapter (id, book_id, chapter_sort_id, 
      `name`, description, content_url, 
      author_id, previous_chapter, `status`, 
      look_times, report, create_time, 
      create_user_id, update_time, update_user_id
      )
    values (#{id,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, #{chapterSortId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{contentUrl,jdbcType=VARCHAR}, 
      #{authorId,jdbcType=VARCHAR}, #{previousChapter,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{lookTimes,jdbcType=INTEGER}, #{report,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssl.springbootvue.model.pojo.Chapter">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="chapterSortId != null">
        chapter_sort_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="contentUrl != null">
        content_url,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="previousChapter != null">
        previous_chapter,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="lookTimes != null">
        look_times,
      </if>
      <if test="report != null">
        report,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="chapterSortId != null">
        #{chapterSortId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="contentUrl != null">
        #{contentUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="previousChapter != null">
        #{previousChapter,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="lookTimes != null">
        #{lookTimes,jdbcType=INTEGER},
      </if>
      <if test="report != null">
        #{report,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssl.springbootvue.model.pojo.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterSortId != null">
        chapter_sort_id = #{record.chapterSortId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.contentUrl != null">
        content_url = #{record.contentUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=VARCHAR},
      </if>
      <if test="record.previousChapter != null">
        previous_chapter = #{record.previousChapter,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.lookTimes != null">
        look_times = #{record.lookTimes,jdbcType=INTEGER},
      </if>
      <if test="record.report != null">
        report = #{record.report,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter
    set id = #{record.id,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=VARCHAR},
      chapter_sort_id = #{record.chapterSortId,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      content_url = #{record.contentUrl,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=VARCHAR},
      previous_chapter = #{record.previousChapter,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      look_times = #{record.lookTimes,jdbcType=INTEGER},
      report = #{record.report,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssl.springbootvue.model.pojo.Chapter">
    update chapter
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="chapterSortId != null">
        chapter_sort_id = #{chapterSortId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="contentUrl != null">
        content_url = #{contentUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="previousChapter != null">
        previous_chapter = #{previousChapter,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="lookTimes != null">
        look_times = #{lookTimes,jdbcType=INTEGER},
      </if>
      <if test="report != null">
        report = #{report,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssl.springbootvue.model.pojo.Chapter">
    update chapter
    set book_id = #{bookId,jdbcType=VARCHAR},
      chapter_sort_id = #{chapterSortId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      content_url = #{contentUrl,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=VARCHAR},
      previous_chapter = #{previousChapter,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      look_times = #{lookTimes,jdbcType=INTEGER},
      report = #{report,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>